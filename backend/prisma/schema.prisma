generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model roles {
  id          String  @id @default(dbgenerated("(uuid())")) @db.Char(36)
  name        String  @db.VarChar(255)
  permissions String? @db.Text
  users       users[]
}

model users {
  id            String       @id @default(dbgenerated("(uuid())")) @db.Char(36)
  username      String       @db.VarChar(255)
  password      String       @db.VarChar(255)
  name          String       @db.VarChar(255)
  description   String?      @db.Text
  role_id       String?      @db.Char(36)
  department_id String?      @db.Char(36)
  listens       listens[]
  roles         roles?       @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_ibfk_1")
  departments   departments? @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_ibfk_2")

  @@index([role_id], map: "role_id")
  @@index([department_id], map: "department_id")
}

model departments {
  id                String        @id @default(dbgenerated("(uuid())")) @db.Char(36)
  name              String        @db.VarChar(255)
  identification    String?       @db.VarChar(255)
  description       String?       @db.Text
  parent_id         String?       @db.Char(36)
  departments       departments?  @relation("departmentsTodepartments", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "departments_ibfk_1")
  other_departments departments[] @relation("departmentsTodepartments")
  users             users[]

  @@index([parent_id], map: "parent_id")
}

model listens {
  id      String   @id @default(dbgenerated("(uuid())")) @db.Char(36)
  user_id String?  @db.Char(36)
  url     String?  @db.Text
  time    DateTime @default(now()) @db.Timestamp(0)
  users   users?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "listens_ibfk_1")

  @@index([user_id], map: "user_id")
}
